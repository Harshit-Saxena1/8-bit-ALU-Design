#! /c/Source/iverilog-install/bin/vvp
:ivl_version "12.0 (devel)" "(s20150603-1539-g2693dd32b)";
:ivl_delay_selection "TYPICAL";
:vpi_time_precision - 12;
:vpi_module "C:\iverilog\lib\ivl\system.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_sys.vpi";
:vpi_module "C:\iverilog\lib\ivl\vhdl_textio.vpi";
:vpi_module "C:\iverilog\lib\ivl\v2005_math.vpi";
:vpi_module "C:\iverilog\lib\ivl\va_math.vpi";
S_00000254cff54940 .scope module, "ALU_8_bit_tb" "ALU_8_bit_tb" 2 4;
 .timescale -9 -12;
v00000254cff35ab0_0 .var "A", 7 0;
v00000254cff35b50_0 .net "ALU_out", 7 0, v00000254cff358d0_0;  1 drivers
v00000254cff35bf0_0 .var "B", 7 0;
v00000254cff35c90_0 .var "select", 3 0;
S_00000254cff54d60 .scope module, "uut" "ALU_8_bit" 2 9, 3 1 0, S_00000254cff54940;
 .timescale -9 -12;
    .port_info 0 /INPUT 8 "A";
    .port_info 1 /INPUT 8 "B";
    .port_info 2 /INPUT 4 "select";
    .port_info 3 /OUTPUT 8 "ALU_out";
v00000254cff12f50_0 .net "A", 7 0, v00000254cff35ab0_0;  1 drivers
v00000254cff358d0_0 .var "ALU_out", 7 0;
v00000254cff35970_0 .net "B", 7 0, v00000254cff35bf0_0;  1 drivers
v00000254cff35a10_0 .net "select", 3 0, v00000254cff35c90_0;  1 drivers
E_00000254cff35210 .event anyedge, v00000254cff35a10_0, v00000254cff12f50_0, v00000254cff35970_0;
    .scope S_00000254cff54d60;
T_0 ;
    %wait E_00000254cff35210;
    %load/vec4 v00000254cff35a10_0;
    %dup/vec4;
    %pushi/vec4 0, 0, 4;
    %cmp/u;
    %jmp/1 T_0.0, 6;
    %dup/vec4;
    %pushi/vec4 1, 0, 4;
    %cmp/u;
    %jmp/1 T_0.1, 6;
    %dup/vec4;
    %pushi/vec4 2, 0, 4;
    %cmp/u;
    %jmp/1 T_0.2, 6;
    %dup/vec4;
    %pushi/vec4 3, 0, 4;
    %cmp/u;
    %jmp/1 T_0.3, 6;
    %dup/vec4;
    %pushi/vec4 4, 0, 4;
    %cmp/u;
    %jmp/1 T_0.4, 6;
    %dup/vec4;
    %pushi/vec4 5, 0, 4;
    %cmp/u;
    %jmp/1 T_0.5, 6;
    %dup/vec4;
    %pushi/vec4 6, 0, 4;
    %cmp/u;
    %jmp/1 T_0.6, 6;
    %dup/vec4;
    %pushi/vec4 7, 0, 4;
    %cmp/u;
    %jmp/1 T_0.7, 6;
    %dup/vec4;
    %pushi/vec4 8, 0, 4;
    %cmp/u;
    %jmp/1 T_0.8, 6;
    %dup/vec4;
    %pushi/vec4 9, 0, 4;
    %cmp/u;
    %jmp/1 T_0.9, 6;
    %dup/vec4;
    %pushi/vec4 10, 0, 4;
    %cmp/u;
    %jmp/1 T_0.10, 6;
    %dup/vec4;
    %pushi/vec4 11, 0, 4;
    %cmp/u;
    %jmp/1 T_0.11, 6;
    %dup/vec4;
    %pushi/vec4 12, 0, 4;
    %cmp/u;
    %jmp/1 T_0.12, 6;
    %dup/vec4;
    %pushi/vec4 13, 0, 4;
    %cmp/u;
    %jmp/1 T_0.13, 6;
    %dup/vec4;
    %pushi/vec4 14, 0, 4;
    %cmp/u;
    %jmp/1 T_0.14, 6;
    %dup/vec4;
    %pushi/vec4 15, 0, 4;
    %cmp/u;
    %jmp/1 T_0.15, 6;
    %pushi/vec4 255, 255, 8;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.0 ;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %add;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.1 ;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %sub;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.2 ;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %mul;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.3 ;
    %load/vec4 v00000254cff35970_0;
    %pad/u 32;
    %cmpi/ne 0, 0, 32;
    %flag_mov 8, 4;
    %jmp/0 T_0.18, 8;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %div;
    %jmp/1 T_0.19, 8;
T_0.18 ; End of true expr.
    %pushi/vec4 0, 0, 8;
    %jmp/0 T_0.19, 8;
 ; End of false expr.
    %blend;
T_0.19;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.4 ;
    %load/vec4 v00000254cff12f50_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftl 4;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.5 ;
    %load/vec4 v00000254cff12f50_0;
    %ix/load 4, 1, 0;
    %flag_set/imm 4, 0;
    %shiftr 4;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.6 ;
    %load/vec4 v00000254cff12f50_0;
    %parti/s 7, 0, 2;
    %load/vec4 v00000254cff12f50_0;
    %parti/s 1, 7, 4;
    %concat/vec4; draw_concat_vec4
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.7 ;
    %load/vec4 v00000254cff12f50_0;
    %parti/s 1, 0, 2;
    %load/vec4 v00000254cff12f50_0;
    %parti/s 7, 1, 2;
    %concat/vec4; draw_concat_vec4
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.8 ;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %and;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.9 ;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %or;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.10 ;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %xor;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.11 ;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %or;
    %inv;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.12 ;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %and;
    %inv;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.13 ;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %xor;
    %inv;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.14 ;
    %load/vec4 v00000254cff35970_0;
    %load/vec4 v00000254cff12f50_0;
    %cmp/u;
    %flag_mov 8, 5;
    %jmp/0 T_0.20, 8;
    %pushi/vec4 1, 0, 8;
    %jmp/1 T_0.21, 8;
T_0.20 ; End of true expr.
    %pushi/vec4 0, 0, 8;
    %jmp/0 T_0.21, 8;
 ; End of false expr.
    %blend;
T_0.21;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.15 ;
    %load/vec4 v00000254cff12f50_0;
    %load/vec4 v00000254cff35970_0;
    %cmp/e;
    %flag_mov 8, 4;
    %jmp/0 T_0.22, 8;
    %pushi/vec4 1, 0, 8;
    %jmp/1 T_0.23, 8;
T_0.22 ; End of true expr.
    %pushi/vec4 0, 0, 8;
    %jmp/0 T_0.23, 8;
 ; End of false expr.
    %blend;
T_0.23;
    %store/vec4 v00000254cff358d0_0, 0, 8;
    %jmp T_0.17;
T_0.17 ;
    %pop/vec4 1;
    %jmp T_0;
    .thread T_0, $push;
    .scope S_00000254cff54940;
T_1 ;
    %vpi_call 2 12 "$dumpfile", "ALU_8_bit_tb.vcd" {0 0 0};
    %vpi_call 2 13 "$dumpvars", 32'sb00000000000000000000000000000000, S_00000254cff54940 {0 0 0};
    %pushi/vec4 125, 0, 8;
    %store/vec4 v00000254cff35ab0_0, 0, 8;
    %pushi/vec4 5, 0, 8;
    %store/vec4 v00000254cff35bf0_0, 0, 8;
    %pushi/vec4 0, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 18 "$display", "Add: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 1, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 21 "$display", "Subtract: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 2, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 24 "$display", "Multiply: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 3, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 27 "$display", "Divide: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 4, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 30 "$display", "Left Shift: A = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 5, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 33 "$display", "Right Shift: A = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 6, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 36 "$display", "Rotate Left: A = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 7, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 39 "$display", "Rotate Right: A = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 8, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 42 "$display", "AND: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 9, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 45 "$display", "OR: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 10, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 48 "$display", "XOR: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 11, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 51 "$display", "NOR: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 12, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 54 "$display", "NAND: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 13, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 57 "$display", "XNOR: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 14, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 60 "$display", "Greater: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 15, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 63 "$display", "Equality: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %pushi/vec4 10, 0, 8;
    %store/vec4 v00000254cff35ab0_0, 0, 8;
    %pushi/vec4 0, 0, 8;
    %store/vec4 v00000254cff35bf0_0, 0, 8;
    %pushi/vec4 3, 0, 4;
    %store/vec4 v00000254cff35c90_0, 0, 4;
    %delay 10000, 0;
    %vpi_call 2 67 "$display", "Divide by Zero: A = %d, B = %d, Output = %d", v00000254cff35ab0_0, v00000254cff35bf0_0, v00000254cff35b50_0 {0 0 0};
    %vpi_call 2 70 "$finish" {0 0 0};
    %end;
    .thread T_1;
# The file index is used to find the file name in the following table.
:file_names 4;
    "N/A";
    "<interactive>";
    "ALU_8_bit_tb.v";
    "./ALU_8_bit.v";
